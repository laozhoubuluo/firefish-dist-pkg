#!/usr/bin/env bash

set -euo pipefail
[ "${TRACE:-false}" = 'true' ] && set -x

SCRIPT_DIR="$(cd "$(dirname "$0")" && pwd)"
source "${SCRIPT_DIR}/env.bash"

mkdir -p "${SOURCE_DIR}"
mkdir -p "${INSTALL_DIR}"

apt update -y

apt install -y \
    git \
    build-essential \
    debhelper \
    pbuilder \
    devscripts \
    lsb-release \
    wget

wget -O/tmp/rustup-init.bash https://sh.rustup.rs
bash /tmp/rustup-init.bash -y \
  --profile minimal \
  --default-toolchain stable
source "$HOME/.cargo/env"

DEB_BUILD_GNU_TYPE="$(dpkg-architecture -qDEB_BUILD_GNU_TYPE)"
DEB_HOST_MULTIARCH="$(dpkg-architecture -qDEB_HOST_MULTIARCH)"
DISTRO="$(lsb_release -c -s 2>/dev/null)"

git clone "$CALCKEY_SOURCE_GIT_REPO" "${SOURCE_DIR}"

wget -q -O- 'https://deb.nodesource.com/gpgkey/nodesource.gpg.key' \
    | gpg --dearmor | tee /usr/share/keyrings/nodesource.gpg >/dev/null
tee /etc/apt/sources.list.d/nodesource.list <<EOS
deb [signed-by=/usr/share/keyrings/nodesource.gpg] https://deb.nodesource.com/node_20.x ${DISTRO} main
EOS

apt update -y

# Install build dependencies
apt install -y \
    nodejs

corepack enable
corepack prepare pnpm@latest --activate

cd "${SOURCE_DIR}"

pnpm i --frozen-lockfile
pnpm run build
