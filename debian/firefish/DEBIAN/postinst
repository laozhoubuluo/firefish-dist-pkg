#!/bin/sh

set -e

# summary of how this script can be called:
#        * <postinst> 'configure' <most-recently-configured-version>
#        * <old-postinst> 'abort-upgrade' <new version>
#        * <conflictor's-postinst> 'abort-remove' 'in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> 'abort-deconfigure' 'in-favour'
#          <failed-install-package> <version> 'removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
#
# quoting from the policy:
#     Any necessary prompting should almost always be confined to the
#     post-installation script, and should be protected with a conditional
#     so that unnecessary prompting doesn't happen if a package's
#     installation fails and the 'postinst' is called with 'abort-upgrade',
#     'abort-remove' or 'abort-deconfigure'.

USER=firefish
GROUP="$USER"
CONFFILE=/etc/firefish/default.yml
DATADIR=/var/lib/firefish

case "$1" in
  configure)
    # Add service user
    adduser \
        --quiet \
        --system \
        --home "$DATADIR/work" \
        --create-home \
        --group \
        --gecos "Firefish daemon" \
        "$USER"

    mkdir -p "$DATADIR/files"
    chown "$USER:$USER" "$DATADIR/files"
    chmod 0750 "$DATADIR/files"
  ;;

  abort-upgrade|abort-remove|abort-deconfigure)
    :
  ;;

  *)
    echo "postinst called with unknown argument '$1'" >&2
    exit 1
  ;;
esac

# Automatically added by dh_installsystemd/*
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	# The following line should be removed in trixie or trixie+1
	deb-systemd-helper unmask 'firefish.service' >/dev/null || true

	if ! dpkg-statoverride --list "${CONFFILE}" >/dev/null 2>&1
	then
		dpkg-statoverride --update --add "${USER}" "${GROUP}" 640 "${CONFFILE}"
	fi

	# was-enabled defaults to true, so new installations run enable.
	if deb-systemd-helper --quiet was-enabled 'firefish.service'; then
		# Enables the unit on first installation, creates new
		# symlinks on upgrades if the unit file has changed.
		deb-systemd-helper enable 'firefish.service' >/dev/null || true
	else
		# Update the statefile to add new symlinks (if any), which need to be
		# cleaned up on purge. Also remove old symlinks.
		deb-systemd-helper update-state 'firefish.service' >/dev/null || true
	fi
fi
# End automatically added section
# Automatically added by dh_installsystemd/*
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	if [ -d /run/systemd/system ]; then
		systemctl --system daemon-reload >/dev/null || true
		if [ -n "$2" ]; then
			_dh_action=restart
		else
			_dh_action=start
		fi
		deb-systemd-invoke $_dh_action 'firefish.service' >/dev/null || true
	fi
fi
# End automatically added section

exit 0
