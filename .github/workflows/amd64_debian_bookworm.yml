name: Deploy for amd64 / Debian bookworm

on:
    push:
        branches: [ "main" ]
        tags: [ "*" ]
    pull_request:
        branches: [ "main" ]

env:
    DISTRO_BASE: debian
    DISTRO: bookworm

jobs:
    build-deb:
        runs-on: ubuntu-latest

        steps:
            -   name: Checkout repository
                uses: actions/checkout@v3

            -   name: Generate params if needed
                run: ./debian/scripts/gen-params > ./debian/scripts/params.bash

            -   name: Check package version
                if: startsWith(github.ref, 'refs/tags/')
                run: |
                    source ./debian/scripts/env.bash
                    [ "v$PKG_VERSION" = "$GITHUB_REF_NAME" ]

            -   name: Cache Docker layers
                uses: actions/cache@v3
                with:
                    path: /tmp/.buildx-cache
                    key: ${{ env.CACHE_KEY_PREFIX }}-${{ github.sha }}
                    restore-keys: |
                        ${{ env.CACHE_KEY_PREFIX }}-${{ github.sha }}
                        ${{ env.CACHE_KEY_PREFIX }}-
                env:
                    CACHE_KEY_PREFIX: buildx-cache-${{ env.DISTRO_BASE }}-${{ env.DISTRO }}-${{ hashFiles('./debian/scripts/env.bash') }}

            -   name: Set up Docker Buildx
                uses: docker/setup-buildx-action@v2
                with:
                    install: true

            -   name: Build deb
                uses: docker/build-push-action@v4
                with:
                    context: ./debian
                    load: true
                    target: debcontainer
                    build-args: |
                        DISTRO_BASE=${{ env.DISTRO_BASE }}
                        DEBIAN_DISTRO=${{ env.DISTRO }}
                    tags: ghcr.io/mizunashi-mana/firefish-dist-pkg/debian-debcontainer
                    cache-from: type=local,src=/tmp/.buildx-cache
                    cache-to: type=local,dest=/tmp/.buildx-cache

            -   name: Copy deb
                run: |
                    docker create --name deb ghcr.io/mizunashi-mana/firefish-dist-pkg/debian-debcontainer
                    docker cp deb:/workdir/dest ./dest
                    docker rm deb
                    for file in $(find ./dest -type f); then
                        mv "$file" "$(dirname "$file")/${DISTRO_BASE}-${DISTRO}_$(basename "$file")"
                    fi

            -   name: Archive deb artifact
                uses: actions/upload-artifact@v3
                with:
                    name: deb
                    retention-days: 1
                    path: |
                        ./dest/*.deb

            -   name: Build compose images
                uses: docker/bake-action@v3
                with:
                    workdir: ./debian
                    files: ./docker-compose.yml
                    load: true
                    set: |
                        *.cache-from=type=local,src=/tmp/.buildx-cache
                        *.cache-to=type=local,dest=/tmp/.buildx-cache
                        *.args.DISTRO_BASE=${{ env.DISTRO_BASE }}
                        *.args.DISTRO=${{ env.DISTRO }}

            -   name: Pull compose images
                run: |
                    docker compose -f debian/docker-compose.yml pull

            -   name: Test
                run: |
                    docker compose -f debian/docker-compose.yml up -d
                    env TRACE=true ./debian/scripts/test
                    docker compose -f debian/docker-compose.yml logs

    release:
        needs:
            - "build-deb"
        if: startsWith(github.ref, 'refs/tags/')
        runs-on: ubuntu-latest
        steps:
            -   name: Download deb
                uses: actions/download-artifact@v3
                with:
                    name: deb

            -   name: Release
                uses: softprops/action-gh-release@v1
                with:
                    files: |
                        *.deb
