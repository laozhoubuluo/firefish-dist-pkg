name: Deploy for amd64 / Debian bookworm

on:
    push:
        branches: [ "main" ]
        tags: [ "*" ]
    pull_request:
        branches: [ "main" ]

jobs:
    build-deb:
        runs-on: ubuntu-latest

        steps:
            -   name: Checkout repository
                uses: actions/checkout@v3

            -   name: Generate params if needed
                if: startsWith(github.ref, 'refs/tags/')
                run: ./debian/scripts/gen-params

            -   name: Check package version
                if: startsWith(github.ref, 'refs/tags/')
                run: |
                    source ./debian/scripts/env.bash
                    [ "$PKG_VERSION" = "$GITHUB_REF_NAME" ]

            -   name: Set up Docker Buildx
                id: buildx
                uses: docker/setup-buildx-action@v1

            -   name: Cache Docker layers
                uses: actions/cache@v2
                with:
                    path: /tmp/.buildx-cache
                    key: buildx-cache-${{ hashFiles('./debian/scripts/env.bash') }}-${{ github.sha }}
                    restore-keys: |
                        buildx-cache-${{ hashFiles('./debian/scripts/env.bash') }}-${{ github.sha }}
                        buildx-cache-${{ hashFiles('./debian/scripts/env.bash') }}
                        buildx-cache-

            -   name: Build deb
                id: build_deb
                uses: docker/build-push-action@v2
                with:
                    context: ./debian
                    builder: ${{ steps.buildx.outputs.name }}
                    push: false
                    tags: firefish-builder
                    target: builder
                    cache-from: type=local,src=/tmp/.buildx-cache
                    cache-to: type=local,dest=/tmp/.buildx-cache

            -   name: Copy deb
                run: |
                    docker create --name firefish-builder-container firefish-builder
                    docker cp firefish-builder-container:/workdir/dest ./dest
                    docker rm -f firefish-builder-container

            -   name: Archive deb artifact
                uses: actions/upload-artifact@v3
                with:
                    name: deb
                    retention-days: 1
                    path: |
                        ./dest/*.deb

            -   name: Build runner image
                uses: docker/build-push-action@v2
                with:
                    context: ./debian
                    builder: ${{ steps.buildx.outputs.name }}
                    push: false
                    target: runner
                    cache-from: type=local,src=/tmp/.buildx-cache
                    cache-to: type=local,dest=/tmp/.buildx-cache

            -   name: Pull other images
                run: |
                    docker compose -f debian/docker-compose.yml pull

            -   name: Test
                run: |
                    docker compose -f debian/docker-compose.yml up -d
                    env TRACE=true ./debian/scripts/test

    release:
        needs:
            - "build-deb"
        if: startsWith(github.ref, 'refs/tags/')
        runs-on: ubuntu-latest
        steps:
            -   name: Download deb
                uses: actions/download-artifact@v3
                with:
                    name: deb

            -   name: Release
                uses: softprops/action-gh-release@v1
                with:
                    files: |
                        *.deb
